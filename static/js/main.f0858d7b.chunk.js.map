{"version":3,"sources":["components/AddItemCard.js","img/bim.jpeg","components/Modal.js","components/ItemCard.js","img/loading.gif","components/Loader.js","components/Clouds.js","components/Header.js","components/ProjectCard.js","components/Projects.js","components/Model.js","components/Models.js","components/Viewer.js","components/Login.js","App.js","reportWebVitals.js","index.js"],"names":["AddItemCard","clouds","setClouds","setLoader","useState","name","file","cloudInfos","setCloudInfos","handleClick","e","preventDefault","add_item_div","document","getElementsByClassName","inputs","Array","from","classList","contains","remove","getElementById","style","backgroundImage","map","input","value","border","opacity","add","className","title","onClick","action","id","type","accept","onChange","target","files","reader","FileReader","onloadend","result","readAsDataURL","placeholder","autoComplete","required","myHeaders","Headers","append","localStorage","getItem","raw","JSON","stringify","fetch","method","headers","body","redirect","then","response","json","formdata","FormData","requestOptions","catch","error","console","log","Modal","show","hide","icon","submit","stopPropagation","ItemCard","cloud","index","navigate","useNavigate","showModal","setShowModal","updateName","setUpdateName","handleEditFormSubmit","editCloudForm","onSubmit","htmlFor","image","src","bim","alt","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","formatDate","created_at","getHours","getMinutes","getSeconds","formatTime","itemIndex","window","confirm","forEach","text","newArray","filter","i","Loader","loading","Clouds","searchedClouds","setSearchedClouds","searchValue","setSearchValue","loader","useEffect","loadClouds","a","data","toLowerCase","includes","Header","token","setToken","ProjectCard","project","projects","setProjects","hideModal","editProjectForm","tagName","p","Projects","cloud_id","useParams","addFormClassNames","setAddFormClassNames","newProjectName","setNewProjectName","searchedProjects","setSearchedProjects","searchedProject","setSearchedProject","loadProjects","handleNewProjectChange","keyCode","to","prev","onKeyDown","Model","model","project_id","models","setModels","mapFile","setMapFile","endpoint","ifc_id","map_file","Models","filename","newModel","setNewModel","handleModelChange","handleNewModelSubmit","addIfcFrom","loadModels","Viewer","makeBIMDataViewer","api","ifcIds","parseInt","cloudId","projectId","accessToken","substr","mount","Login","email","password","inputValue","setInputValue","alerts","setAlerts","handleChange","user","getAccess","qs","grant_type","client_id","client_secret","config","url","axios","access_token","message","handleSubmit","setTimeout","msg","setItem","autoFocus","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.f0858d7b.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nexport default function AddItemCard({clouds, setClouds, setLoader}) {\r\n  const [cloudInfos, setCloudInfos] = useState({\r\n    name: '',\r\n    file: ''\r\n  });\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    const add_item_div = document.getElementsByClassName('add-item')[0];\r\n    const inputs = Array.from(document.getElementsByClassName('input'));\r\n    if (add_item_div.classList.contains('show-add-item-form')) {\r\n      add_item_div.classList.remove('show-add-item-form');\r\n      document.getElementById('image').style.backgroundImage = \"url('')\";\r\n      inputs.map((input) => (input.value = ''));\r\n      setCloudInfos({\r\n        name: '',\r\n        file: ''\r\n      })\r\n    } else {\r\n      document.getElementById('image').style.border = '2px dotted #9E6240';\r\n      document.getElementById('upload-img').style.opacity = '1';\r\n      add_item_div.classList.add('show-add-item-form');\r\n    }\r\n  };\r\n\r\n  const handleImageChange = ({ target }) => {\r\n    let file = target.files[0];\r\n    setCloudInfos({\r\n      file: file,\r\n      name: cloudInfos.name,\r\n    });\r\n    let reader = new FileReader();\r\n    reader.onloadend = () => {\r\n      document.getElementById('image').style.backgroundImage =\r\n        'url(' + reader.result + ')';\r\n      document.getElementById('image').style.border = 'none';\r\n      document.getElementById('upload-img').style.opacity = '0';\r\n    };\r\n    if (file) {\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const handleChange = ({ target }) => {\r\n    setCloudInfos({\r\n      file: cloudInfos.file,\r\n      name: target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (cloudInfos.name !== '') {\r\n      setLoader(true);\r\n      let myHeaders = new Headers();\r\n      myHeaders.append('Content-Type', 'application/json');\r\n      myHeaders.append(\"Authorization\", localStorage.getItem('access_token'));\r\n      let raw = JSON.stringify({\r\n        name: cloudInfos.name,\r\n      });\r\n\r\n      let requestOptions = {\r\n        method: 'POST',\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: 'follow',\r\n      };\r\n\r\n      fetch('https://api.bimdata.io/cloud', requestOptions)\r\n        .then((response) => response.json())\r\n        .then((result) => {\r\n            let myHeaders = new Headers();\r\n            myHeaders.append(\"Authorization\", localStorage.getItem('access_token'));\r\n\r\n            const formdata = new FormData();\r\n            formdata.append(\"image\", cloudInfos.file);\r\n            \r\n            const requestOptions = {\r\n              method: 'PATCH',\r\n              headers: myHeaders,\r\n              body: formdata,\r\n              redirect: 'follow'\r\n            };\r\n            \r\n            fetch(\"https://api.bimdata.io/cloud/\"+result.id, requestOptions)\r\n              .then(response => response.json())\r\n              .then(result => {\r\n                setClouds([...clouds, result]);\r\n                let add_item_div = document.getElementsByClassName('add-item')[0];\r\n                add_item_div.classList.remove('show-add-item-form');\r\n                const inputs = Array.from(document.getElementsByClassName('input'));\r\n                inputs.map((input) => (input.value = ''));\r\n                document.getElementById('image').style.backgroundImage = \"url('')\";\r\n                setCloudInfos({\r\n                  name: '',\r\n                  file: ''\r\n                })\r\n              })\r\n              .catch(error => console.log('error', error));\r\n\r\n        })\r\n        .catch((error) => console.log('error', error));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='add-item-card'>\r\n      <i\r\n        className='fas fa-plus-circle'\r\n        title='Add new cloud'\r\n        onClick={handleClick}\r\n      ></i>\r\n      <div className='add-item'>\r\n        <form action=''>\r\n          <div className='img-insertion' id='image'>\r\n            <span id='upload-img'>Upload image</span>\r\n            <input\r\n              type='file'\r\n              accept=\"image/*\"\r\n              id='getval'\r\n              className='input'\r\n              onChange={handleImageChange}\r\n            />\r\n          </div>\r\n          <div className='info-insertion'>\r\n            <input\r\n              type='text'\r\n              onChange={handleChange}\r\n              placeholder='Put the name here'\r\n              className='input_field input'\r\n              name='cloud_name'\r\n              autoComplete='off'\r\n              required\r\n            />\r\n            <div className='button-div'>\r\n              <button type='submit' onClick={handleSubmit}>\r\n                Add cloud\r\n              </button>\r\n              <i className='fas fa-window-close' onClick={handleClick}></i>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/bim.38b3a7ed.jpeg\";","import React from 'react'\r\n\r\nexport default function Modal({show, hide, icon, title, body, submit}) {\r\n    return (\r\n        <div className={`modal ${show ? 'show' : ''} `} onClick={hide}>\r\n            <div className=\"modal-content\" onClick={e => e.stopPropagation()}>\r\n                <div className=\"modal-header\">\r\n                    <span>{icon}</span>\r\n                    <h4>{title}</h4>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    {body}\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button onClick={hide} className='cancel-ifc'>Cancel</button>\r\n                    <button onClick={submit} className='submit-ifc'>Submit</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport bim from '../img/bim.jpeg';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Modal from './Modal';\r\nexport default function ItemCard({ clouds, setClouds, cloud, index, setLoader }) {\r\n    const navigate = useNavigate();\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [updateName, setUpdateName] = useState(cloud.name);\r\n    const formatDate = date => {\r\n        let d = new Date(date),\r\n            month = '' + (d.getMonth() + 1),\r\n            day = '' + d.getDate(),\r\n            year = d.getFullYear();\r\n        if (month.length < 2)\r\n            month = '0' + month;\r\n        if (day.length < 2)\r\n            day = '0' + day;\r\n\r\n        return [year, month, day].join('-');\r\n    }\r\n\r\n    const formatTime = date => {\r\n        let d = new Date(date),\r\n            hour = d.getHours(),\r\n            minute = d.getMinutes(),\r\n            second = d.getSeconds();\r\n\r\n        return [hour, minute, second].join(':');\r\n    }\r\n\r\n    const handleEditFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        let myHeaders = new Headers();\r\n        myHeaders.append(\"Authorization\", localStorage.getItem('access_token'));\r\n        myHeaders.append(\"Content-type\", \"application/json\");\r\n        let raw = JSON.stringify({\r\n            name: updateName\r\n        });\r\n        const requestOptions = {\r\n            method: 'PATCH',\r\n            headers: myHeaders,\r\n            body: raw,\r\n            redirect: 'follow'\r\n        };\r\n        setShowModal(false);\r\n        setLoader(true);\r\n        fetch(\"https://api.bimdata.io/cloud/\" + cloud.id, requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                setClouds([...clouds, result]);\r\n            })\r\n            .catch(error => console.log('error', error));\r\n    }\r\n\r\n    const editCloudForm =\r\n        <form className='edit-cloud-form' onSubmit={handleEditFormSubmit}>\r\n            <label htmlFor=\"cloud-name\">New name : </label><input className='edit-cloud-name' type=\"text\" value={updateName} onChange={({ target }) => setUpdateName(target.value)} />\r\n        </form>\r\n\r\n    const hideModal = () => {\r\n        setShowModal(false);\r\n        setUpdateName(cloud.name);\r\n    }\r\n\r\n    const handleDeleteItemClick = itemIndex => {\r\n        if (!window.confirm(\"Do you really want to remove this cloud ?\"))\r\n            return;\r\n        clouds.forEach((cloud, index) => {\r\n            if (index === itemIndex) {\r\n                setLoader(true);\r\n                let myHeaders = new Headers();\r\n                myHeaders.append(\"Authorization\", localStorage.getItem('access_token'));\r\n                let requestOptions = {\r\n                    method: 'DELETE',\r\n                    headers: myHeaders,\r\n                    redirect: 'follow'\r\n                };\r\n\r\n                fetch('https://api.bimdata.io/cloud/' + cloud.id, requestOptions)\r\n                    .then(response => response.text())\r\n                    .then(() => {\r\n                        let newArray = clouds.filter((cloud, i) => {\r\n                            return i !== itemIndex;\r\n                        });\r\n                        setClouds(newArray);\r\n                    })\r\n                    .catch(error => console.log('error', error));\r\n            }\r\n        }\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='cloud-item'>\r\n                <div className=\"cloud-inner\">\r\n                    <div className=\"cloud-front\">\r\n                        <div className=\"item-img\">\r\n                            <div id=\"img\" style={{ backgroundImage: `url('${cloud.image}')` }}>\r\n                                {\r\n                                    cloud.image === null ? <img src={`${bim}`} alt=\"IMG\" /> : null\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-details\">\r\n                            <h3>{cloud.name}</h3>\r\n                            <span className=\"date\">Created on {formatDate(cloud.created_at)}</span>\r\n                            <span className=\"date\">At {formatTime(cloud.created_at)}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"cloud-back\">\r\n                        <div className=\"cloud-options\">\r\n                            <div className='cloud-option' onClick={() => setShowModal(true)}>\r\n                                <i className=\"fas fa-pen-square option-icon\"></i>\r\n                                <span className='option'>Update</span>\r\n                            </div>\r\n                            <div className='cloud-option' onClick={() => navigate('clouds/' + clouds[index].id + '/projects')}>\r\n                                <i className=\"fas fa-info-circle option-icon\"></i>\r\n                                <span className='option'>Details</span>\r\n                            </div>\r\n                            <div className='cloud-option' onClick={() => handleDeleteItemClick(index)}>\r\n                                <i className=\"fas fa-trash option-icon\"></i>\r\n                                <span className='option'>Delete</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Modal show={showModal} body={editCloudForm} hide={hideModal} icon={<i className=\"fas fa-pen-square\"></i>} submit={handleEditFormSubmit} title=\"Edit cloud name\" />\r\n        </>\r\n\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/loading.edf8ee4d.gif\";","import React from 'react';\r\nimport loading from '../img/loading.gif';\r\n\r\nexport default function Loader() {\r\n    return (\r\n        <div className='loading'>\r\n            <img src={loading} alt=\"loading...\" />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport AddItemCard from './AddItemCard';\r\nimport ItemCard from './ItemCard';\r\nimport Loader from './Loader';\r\n\r\nexport default function Clouds() {\r\n    const [clouds, setClouds] = useState([]);\r\n    const [searchedClouds, setSearchedClouds] = useState([]);\r\n    const [searchValue, setSearchValue] = useState('');\r\n    const [loader, setLoader] = useState(true);\r\n    useEffect(() => {\r\n        loadClouds();\r\n    }, [clouds.length])\r\n\r\n    const loadClouds = async () => {\r\n        const myHeaders = new Headers();\r\n        const api_endpoint = 'https://api.bimdata.io/cloud';\r\n        myHeaders.append(\"Authorization\", localStorage.getItem('access_token'));\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n        const response = await fetch(api_endpoint, requestOptions);\r\n        const data = await response.json();\r\n        setClouds(data);\r\n        setSearchedClouds(data);\r\n        setLoader(false);\r\n    }\r\n\r\n    const handleChange = ({ target }) => {\r\n        setSearchValue(target.value);\r\n        setSearchedClouds(clouds.filter(cloud => cloud.name.toLowerCase().includes(target.value.toLowerCase())));\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                loader ?\r\n                    <Loader />\r\n                    :\r\n                    <div className=\"clouds-container\">\r\n                        <div id=\"search-bar\">\r\n                            <i className=\"fas fa-search\"></i>\r\n                            <input className=\"search-input\" type=\"text\" placeholder=\"Search a cloud\" value={searchValue} onChange={handleChange} />\r\n                        </div>\r\n                        <h3 className=\"list-title\">List of clouds</h3>\r\n                        <div id='clouds-list'>\r\n                            \r\n                            <AddItemCard clouds={clouds} setClouds={setClouds} setLoader={setLoader} />\r\n                            {\r\n                                searchValue === '' ?\r\n                                    clouds.map((cloud, index) => {\r\n                                        return (<ItemCard cloud={cloud} setLoader={setLoader} clouds={clouds} setClouds={setClouds} key={index} index={index} />)\r\n                                    }) :\r\n                                    searchedClouds.map((cloud, index) => {\r\n                                        return (<ItemCard cloud={cloud} setLoader={setLoader} clouds={clouds} setClouds={setClouds} key={index} index={index}/>)\r\n                                    })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n            }\r\n        </>\r\n\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useNavigate } from 'react-router';\r\nimport '../App.css';\r\n\r\nexport default function Header({token, setToken}) {\r\n    const navigate = useNavigate();\r\n    const handleLogOut = () => {\r\n        setToken();\r\n        navigate('/');\r\n    }\r\n    return (\r\n        <div id=\"header\">\r\n            <div id=\"left-side\">\r\n                <i className=\"fas fa-home\" onClick={() => navigate('/')}></i>\r\n                <span onClick={() => navigate('/')}> GLOBETUDES</span>\r\n            </div>\r\n            <div id=\"right-side\">\r\n                {\r\n                token ? \r\n                <>\r\n                    <span>{localStorage.getItem('user')}</span>\r\n                    <i className=\"fas fa-sign-out-alt\" onClick={handleLogOut} title=\"Logout\"></i>\r\n                </>\r\n                : null\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react';\r\nimport {useNavigate} from 'react-router-dom';\r\nimport Modal from './Modal';\r\n\r\nexport default function ProjectCard({project, projects, setProjects, setLoader}) {\r\n    const navigate = useNavigate();\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [updateName, setUpdateName] = useState(project.name);\r\n\r\n    const handleDeleteItemClick = () => {\r\n        if(!window.confirm(\"Do you really want to remove this project ?\"))            \r\n            return;\r\n        setLoader(true);\r\n        let myHeaders = new Headers();\r\n        myHeaders.append(\"Authorization\", localStorage.getItem('access_token'));\r\n        let requestOptions = {\r\n            method: 'DELETE',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch('https://api.bimdata.io/cloud/'+project.cloud.id+'/project/'+project.id, requestOptions)\r\n        .then(response => response.text())\r\n        .then(()=>{\r\n            let newArray = projects.filter((p) => {\r\n                return project.id !== p.id;\r\n            });\r\n            setProjects(newArray);\r\n            setLoader(false);\r\n        })\r\n        .catch(error => console.log('error', error));\r\n    }\r\n\r\n    const hideModal = () => {\r\n        setShowModal(false);\r\n        setUpdateName(project.name);\r\n    }\r\n\r\n    const handleEditClick = () => {\r\n        setShowModal(true);\r\n    }\r\n\r\n    const handleEditFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        hideModal();\r\n        setLoader(true);\r\n        let myHeaders = new Headers();\r\n        myHeaders.append(\"Authorization\", localStorage.getItem('access_token'));\r\n        myHeaders.append(\"Content-type\", \"application/json\");\r\n        let raw = JSON.stringify({\r\n            name: updateName\r\n        });\r\n        const requestOptions = {\r\n            method: 'PATCH',\r\n            headers: myHeaders,\r\n            body: raw,\r\n            redirect: 'follow'\r\n        };\r\n        fetch(\"https://api.bimdata.io/cloud/\" + project.cloud.id + \"/project/\" + project.id, requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                setProjects([...projects, result]);\r\n            })\r\n            .catch(error => console.log('error', error));\r\n    }\r\n\r\n    const editProjectForm =\r\n        <form className='edit-cloud-form' onSubmit={handleEditFormSubmit}>\r\n            <label htmlFor=\"cloud-name\">New name : </label><input className='edit-cloud-name' type=\"text\" value={updateName} onChange={({ target }) => setUpdateName(target.value)} />\r\n        </form>\r\n\r\n    const handleProjectClick = ({target}) => {\r\n        if(target.tagName === 'I')\r\n            return;\r\n        navigate('/clouds/'+project.cloud.id+'/projects/'+project.id+'/models');\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"project-card\" index={project.id} onClick={handleProjectClick}>\r\n            <div className=\"project-infos\">\r\n                {\r\n                    project.name\r\n                }\r\n            </div>\r\n            <div className=\"project-options\">\r\n                <i className=\"fas fa-edit\" onClick={handleEditClick}></i>\r\n                <i className=\"fas fa-trash\" onClick={handleDeleteItemClick}></i>\r\n            </div>\r\n        </div>\r\n        <Modal show={showModal} hide={hideModal} body={editProjectForm} icon={<i className=\"fas fa-pen-square\"></i>} submit={handleEditFormSubmit} title=\"Edit project infos\"/>\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport ProjectCard from './ProjectCard';\r\nimport Loader from './Loader';\r\n\r\nexport default function Projects() {\r\n  const { cloud_id } = useParams();\r\n  const [projects, setProjects] = useState([]);\r\n  // State that manage list of classnames of project add form\r\n  const [addFormClassNames, setAddFormClassNames] = useState('add-form');\r\n  const [newProjectName, setNewProjectName] = useState('');\r\n  const [searchedProjects, setSearchedProjects] = useState([]);\r\n  const [searchedProject, setSearchedProject] = useState('');\r\n  const [loader, setLoader] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const loadProjects = () => {\r\n      let myHeaders = new Headers();\r\n      myHeaders.append(\"Authorization\", localStorage.getItem('access_token'));\r\n      let requestOptions = {\r\n        method: 'GET',\r\n        headers: myHeaders,\r\n        redirect: 'follow',\r\n      };\r\n\r\n      fetch(\r\n        'https://api.bimdata.io/cloud/' + cloud_id + '/project',\r\n        requestOptions\r\n      )\r\n        .then((response) => response.json())\r\n        .then((result) => {\r\n          setProjects(result);\r\n          setSearchedProjects(result);\r\n          setLoader(false);\r\n        })\r\n        .catch((error) => console.log('error', error));\r\n    };\r\n    loadProjects();\r\n  }, [projects.length, cloud_id]);\r\n\r\n  const handleAddProjectClick = () => {\r\n    setAddFormClassNames((prev) => prev + ' show-add-project-form');\r\n  };\r\n\r\n  const handleSearchedProjectChange = ({ target }) => {\r\n    setSearchedProject(target.value);\r\n    setSearchedProjects(\r\n      projects.filter((project) =>\r\n        project.name.toLowerCase().includes(target.value.toLowerCase())\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleNewProjectChange = (e) => {\r\n    setNewProjectName(e.target.value);\r\n    if (e.keyCode === 27) {\r\n      setNewProjectName('');\r\n      setAddFormClassNames('add-form');\r\n    }\r\n  };\r\n\r\n  const handleNewProjectSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoader(true);\r\n    let myHeaders = new Headers();\r\n    myHeaders.append('Content-Type', 'application/json');\r\n    myHeaders.append(\"Authorization\", localStorage.getItem('access_token'));\r\n    let raw = JSON.stringify({\r\n      name: newProjectName,\r\n    });\r\n\r\n    let requestOptions = {\r\n      method: 'POST',\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: 'follow',\r\n    };\r\n\r\n    fetch(\r\n      'https://api.bimdata.io/cloud/' + cloud_id + '/project',\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        setProjects([...projects, result]);\r\n        setAddFormClassNames('add-form');\r\n        setNewProjectName('');\r\n      })\r\n      .catch((error) => console.log('error', error));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {\r\n        loader ?\r\n          <Loader />\r\n          :\r\n          <div className='clouds-container'>\r\n            <div id='menu'>\r\n              <div>\r\n                <Link className='back-link' to='../'>\r\n                  <i className='fas fa-arrow-circle-left'></i> Back\r\n                </Link>\r\n              </div>\r\n              <div id='search-projects'>\r\n                <i className='fas fa-search'></i>\r\n                <input\r\n                  className='search-input'\r\n                  type='text'\r\n                  placeholder='Search a project'\r\n                  onChange={handleSearchedProjectChange}\r\n                  value={searchedProject}\r\n                />\r\n              </div>\r\n              <div className='add-project'>\r\n                <button\r\n                  className='add-project-button'\r\n                  onClick={handleAddProjectClick}\r\n                >\r\n                  <i className='fas fa-plus'></i> Create project\r\n                </button>\r\n                <form\r\n                  action=''\r\n                  className={addFormClassNames}\r\n                  onSubmit={handleNewProjectSubmit}\r\n                >\r\n                  <input\r\n                    id='input'\r\n                    type='text'\r\n                    value={newProjectName}\r\n                    onChange={handleNewProjectChange}\r\n                    onKeyDown={handleNewProjectChange}\r\n                    placeholder='New project name'\r\n                    required\r\n                  />\r\n                  <button type='submit'>\r\n                    <i className='fas fa-paper-plane'></i>\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n            {\r\n              projects.length === 0 ?\r\n                <span id=\"empty-list\">No projects in this cloud, click the button above to add one</span> :\r\n                <>\r\n                <h3 className=\"list-title\">List of projects</h3>\r\n                <div className='projects-list'>\r\n                  {\r\n                    searchedProject === ''\r\n                      ? projects.map((project, index) => {\r\n                        return <ProjectCard key={index} project={project} projects={projects} setProjects={setProjects} setLoader={setLoader} />;\r\n                      })\r\n                      : searchedProjects.map((project, index) => {\r\n                        return <ProjectCard key={index} project={project} projects={projects} setProjects={setProjects} setLoader={setLoader} />;\r\n                      })}\r\n                </div>\r\n                </>\r\n            }\r\n          </div>\r\n      }\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router';\r\nimport loading from '../img/loading.gif';\r\n\r\nexport default function Model({ model, cloud_id, project_id, setLoader, models, setModels}) {\r\n    const navigate = useNavigate();\r\n    const [mapFile, setMapFile] = useState(''); \r\n    const endpoint = \"https://api.bimdata.io/cloud/\"+cloud_id+\"/project/\"+project_id+\"/ifc/\"+model.ifc_id;\r\n    useEffect(() => {\r\n        let myHeaders = new Headers();\r\n        myHeaders.append(\"Authorization\", localStorage.getItem('access_token'));\r\n        let requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(endpoint, requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => setMapFile(result.map_file))\r\n            .catch(error => console.log('error', error));\r\n    }, [endpoint])\r\n\r\n    const handleViewClick = () => {\r\n        navigate('/clouds/' + cloud_id + '/projects/' + project_id + '/models/viewer/' + model.ifc_id);\r\n    }\r\n    const handleDeleteClick = () => {\r\n        if(!window.confirm(\"Do you really want to remove this project ?\"))            \r\n            return;\r\n        setLoader(true);\r\n        let myHeaders = new Headers();\r\n        myHeaders.append(\"Authorization\", localStorage.getItem('access_token'));\r\n        let requestOptions = {\r\n            method: 'DELETE',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch('https://api.bimdata.io/cloud/'+cloud_id+'/project/'+project_id+'/document/'+model.id, requestOptions)\r\n        .then(response => response.text())\r\n        .then(()=>{\r\n            let newArray = models.filter((p) => {\r\n                return model.id !== p.id;\r\n            });\r\n            setModels(newArray);\r\n            setLoader(false);\r\n        })\r\n        .catch(error => console.log('error', error));\r\n    }\r\n    return (\r\n        <div className='model'>\r\n            <div className=\"model-left\">\r\n            {\r\n                mapFile !== '' ? <img src={mapFile} alt=\"Map file\" /> : <img src={loading} id=\"loading-map\" alt=\"Map file\" />\r\n            }\r\n            </div>\r\n            <div className=\"model-right\">\r\n                <div className='model-name'>{model.name}</div>\r\n                <div className='model-options'>\r\n                    <i className='fas fa-eye' onClick={handleViewClick}></i>\r\n                    <i className='fas fa-trash' onClick={handleDeleteClick}></i>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport Loader from './Loader';\r\nimport Modal from './Modal';\r\nimport Model from './Model';\r\n\r\nexport default function Models() {\r\n  const [models, setModels] = useState([]);\r\n  const { cloud_id, project_id } = useParams();\r\n  const [loader, setLoader] = useState(true);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [newModel, setNewModel] = useState({\r\n    filename: '',\r\n    file: ''\r\n  });\r\n\r\n  const handleModelChange = ({ target }) => {\r\n    if(target.type === 'text'){\r\n      setNewModel({\r\n        filename: target.value,\r\n        file: newModel.file\r\n      })\r\n    }\r\n    else{\r\n      setNewModel({\r\n        filename: newModel.filename,\r\n        file: target.files[0]\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleNewModelSubmit = e => {\r\n    e.preventDefault();\r\n    if(!newModel.file || !newModel.filename)\r\n      return;\r\n    else{\r\n      hideModal();\r\n      setLoader(true);\r\n      let myHeaders = new Headers();\r\n      myHeaders.append(\"Authorization\", localStorage.getItem('access_token'));\r\n      let formdata = new FormData();\r\n      formdata.append(\"file\", newModel.file);\r\n      formdata.append(\"name\", newModel.filename);\r\n      let requestOptions = {\r\n        method: 'POST',\r\n        headers: myHeaders,\r\n        body: formdata,\r\n        redirect: 'follow'\r\n      };\r\n  \r\n      fetch('https://api.bimdata.io/cloud/' + cloud_id + '/project/' + project_id + '/document', requestOptions)\r\n        .then(response => response.json())\r\n        .then(result => {\r\n          setModels(...models, result);\r\n        })\r\n        .catch(error => console.log('error', error));\r\n    }\r\n  }\r\n\r\n  const hideModal = () => {\r\n    setNewModel({\r\n      filename: '',\r\n      file: ''\r\n    });\r\n    setShowModal(false);\r\n  }\r\n\r\n  // JSX element that represent body of modal, which is here the form to add a new ifc file\r\n  const addIfcFrom =\r\n    <form className='add-ifc-form' action=\"\" onSubmit={handleNewModelSubmit}>\r\n      <div className=\"filename-input\">\r\n        <input type=\"text\" placeholder='IFC name' value={newModel.filename} onChange={handleModelChange} required />\r\n      </div>\r\n      <div className=\"file-input\">\r\n        <div>{newModel.file ? <i className=\"fas fa-check-circle\"></i> : 'Click or drop IFC here'}</div>\r\n        <input type=\"file\" accept='.ifc' onChange={handleModelChange} required />\r\n      </div>\r\n\r\n    </form>\r\n\r\n  useEffect(() => {\r\n    const loadModels = () => {\r\n      let myHeaders = new Headers();\r\n      myHeaders.append(\"Authorization\", localStorage.getItem('access_token'));\r\n      let requestOptions = {\r\n        method: 'GET',\r\n        headers: myHeaders,\r\n        redirect: 'follow',\r\n      };\r\n\r\n      fetch('https://api.bimdata.io/cloud/' + cloud_id + '/project/' + project_id + '/document',\r\n        requestOptions\r\n      )\r\n        .then((response) => response.json())\r\n        .then((result) => {\r\n          setModels(result)\r\n          setLoader(false)\r\n        })\r\n        .catch((error) => console.log('error', error));\r\n    };\r\n    loadModels();\r\n  }, [models.length, cloud_id, project_id]);\r\n  return (\r\n    <div className='clouds-container'>\r\n      {\r\n        loader ?\r\n          <Loader />\r\n          :\r\n          <>\r\n            <div id='menu'>\r\n              <div>\r\n                <Link className='back-link' to={'/clouds/' + cloud_id + '/projects/'}>\r\n                  <i className='fas fa-arrow-circle-left'></i> Back\r\n                </Link>\r\n              </div>\r\n              <div className='add-project'>\r\n                <button\r\n                  className='add-project-button'\r\n                  onClick={() => setShowModal(true)}\r\n                >\r\n                  <i className='fas fa-plus'></i> Upload IFC\r\n                </button>\r\n              </div>\r\n            </div>\r\n            {models.length ? <h3 className=\"list-title\">List of IFC models</h3> : null}\r\n            <div id='models-list'>\r\n              {\r\n                models.length ?\r\n                  models.map((model, index) => {\r\n                    return <Model cloud_id={cloud_id} project_id={project_id} key={index} model={model} setLoader={setLoader} models={models} setModels={setModels} />;\r\n                  })\r\n                  : <span id=\"empty-list\">No IFCs yet, click the button above to add one</span>\r\n              }\r\n              <Modal show={showModal} icon={<i className=\"fab fa-bimobject\"></i>} title=\"Add new IFC\" body={addIfcFrom} hide={hideModal} submit={handleNewModelSubmit} />\r\n            </div>\r\n\r\n          </>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport makeBIMDataViewer from \"@bimdata/viewer\";\r\n\r\nexport default function Viewer() {\r\n    let { cloud_id, project_id, ifc_id } = useParams();\r\n    useEffect(() => {\r\n        const bimdataViewer = makeBIMDataViewer({\r\n            api: {\r\n                ifcIds: [parseInt(ifc_id)],\r\n                cloudId: parseInt(cloud_id),\r\n                projectId: parseInt(project_id),\r\n                accessToken: localStorage.getItem('access_token').substr(7)\r\n            },\r\n        });\r\n        bimdataViewer.mount(\"#viewer\");\r\n    }, [cloud_id, project_id, ifc_id])\r\n    \r\n    return (\r\n        <div className=\"viewer-container\">\r\n            <div id=\"viewer\">\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport qs from 'qs';\r\n\r\nexport default function Login({ setToken }) {\r\n    const [inputValue, setInputValue] = useState({ email: '', password: '' });\r\n    const [alerts, setAlerts] = useState(' ');\r\n    const handleChange = ({ target }) => {\r\n        if (target.name === 'email') {\r\n            let user = {\r\n                email: target.value,\r\n                password: inputValue.password\r\n            }\r\n            setInputValue(user);\r\n        }\r\n        else if (target.name === 'password') {\r\n            let user = {\r\n                email: inputValue.email,\r\n                password: target.value\r\n            }\r\n            setInputValue(user);\r\n        }\r\n    }\r\n\r\n    const getAccess = async () => {\r\n        let data = qs.stringify({\r\n            grant_type: 'client_credentials',\r\n            client_id: 'b7a0d0fc-0c11-4837-a4f7-e65265c0a9a8',\r\n            client_secret: '820582cd246c060cf91a726b7ddb2330333a197057c366c533d74c83',\r\n        });\r\n        let config = {\r\n            method: 'post',\r\n            url: 'https://iam.bimdata.io/auth/realms/bimdata/protocol/openid-connect/token',\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            data: data,\r\n        };\r\n\r\n        try {\r\n            const response = await axios(config);\r\n            return await response.data.access_token;\r\n        } catch (error) {\r\n            console.error(error.message);\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        if(inputValue.password === '' || inputValue.email === ''){\r\n            setAlerts('Please enter your credentials');\r\n            setTimeout(() => setAlerts(' '), 3000);\r\n            return;\r\n        }\r\n        let myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n        let raw = JSON.stringify({\r\n            \"email\": inputValue.email,\r\n            \"password\": inputValue.password\r\n        });\r\n\r\n        let requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: raw,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(\"http://localhost:5000/api/auth/\", requestOptions)\r\n            .then(response => response.json())\r\n            .then(async(result) => {\r\n                if('msg' in result){\r\n                    setAlerts(result.msg);\r\n                    setTimeout(() => setAlerts(' '), 3000);\r\n                    return;\r\n                }\r\n                const token = await getAccess();\r\n                localStorage.setItem('access_token', 'Bearer ' + token);\r\n                localStorage.setItem('user', inputValue.email);\r\n                setToken('Bearer ' + token);\r\n            }) \r\n            .catch(error => console.log('error', error));\r\n    }\r\n\r\n    return (\r\n        <div className=\"login_container\">\r\n            <h1>Please sign in to your account</h1>\r\n            <div className=\"login_form\">\r\n                <div className=\"icon\">\r\n                    <i className=\"fas fa-globe-africa\"></i>\r\n                </div>\r\n                <form action=\"\" onSubmit={handleSubmit}>\r\n                    <label htmlFor=\"email\" className=\"label\">Email: </label>\r\n                    <input type=\"email\" name=\"email\" className=\"field\" onChange={handleChange} value={inputValue.email} autoFocus />\r\n                    <label htmlFor=\"password\" className=\"label\">Password: </label>\r\n                    <input type=\"password\" name=\"password\" className=\"field\" onChange={handleChange} value={inputValue.password} />\r\n                    <button type='submit'>Sign in</button>\r\n                    <span id='login-alerts'>{alerts}</span>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\n\nimport { Routes, Route } from 'react-router-dom';\nimport Clouds from './components/Clouds';\nimport Header from './components/Header';\nimport Projects from './components/Projects';\nimport Models from './components/Models';\nimport Viewer from './components/Viewer';\nimport Login from './components/Login';\n// import useToken from './resources/useToken';\nimport { useState } from 'react';\n\nfunction App() {\n  const [token, setToken] = useState();\n  return (\n    <div className=\"App\">\n      <Header setToken={setToken} token={token} />\n      {\n        !token ? <Login setToken={setToken} /> :\n          <Routes>\n            <Route path=\"/\" element={<Clouds />} />\n            <Route path=\"/clouds\" element={<Clouds />} />\n            <Route path=\"/clouds/:cloud_id/projects\" element={<Projects />} />\n            <Route path=\"/clouds/:cloud_id/projects/:project_id/models\" element={<Models />} />\n            <Route path=\"/clouds/:cloud_id/projects/:project_id/models/viewer/:ifc_id\" element={<Viewer />} />\n          </Routes>\n      }\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}